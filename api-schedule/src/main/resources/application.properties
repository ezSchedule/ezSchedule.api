#spring.jpa.hibernate.ddl-auto=update
#spring.datasource.url=jdbc:mysql://${MYSQL_HOST:localhost}:3306/teste
#spring.datasource.username=root
#spring.datasource.password=
#server.port=8181

#Configuração para funcionar o swagger
spring.mvc.pathmatch.matching-strategy=ant_path_matcher

#Envio de email
spring.mail.host=smtp.office365.com
spring.mail.port=587
spring.mail.username=ezSchedule@outlook.com
spring.mail.password=#Gfgrupo1
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true
spring.mail.properties.mail.smtp.connectiontimeout=50000
spring.mail.properties.mail.smtp.timeout=5000
spring.mail.properties.mail.smtp.writetimeout=5000


spring.mail.properties.mail.smtp.socketFactory.port=465
spring.mail.properties.mail.smtp.socketFactory.class=javax.net.ssl.SSLSocketFactory

# Exibe mensagens de erro valores inválidos (400)
 server.error.include-message=always
 server.error.include-binding-errors=always

## habilita a impressão dos comando SQL no log
spring.jpa.show-sql=true
#
## formata os SQL (quebra linha, identa etc)
spring.jpa.properties.hibernate.format_sql=true
#
## Habilitando o H2 Console. Num navegador, permite o acesso a http://localhost:8080/h2-console
spring.h2.console.enabled=true
#
## indica qual a URL de acesso ao banco. A palavra "nome_banco" ao final é o nome do banco de dados
spring.datasource.url=jdbc:h2:mem:teste
#
## Habilita data.sql
spring.jpa.defer-datasource-initialization=true

uri.services=/services
uri.tentant=/tenant
uri.report=/reports
uri.saloons=/saloons
uri.schedule=/schedules
uri.forum=/forum

# validade do token
jwt.validity=3600000

# palavra passe do token
jwt.secret=secret